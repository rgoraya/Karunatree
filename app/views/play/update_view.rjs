# Notify the client that we are loading a new scene
page.call "kt.sceneIsLoading", @scene.name, @scene.subscene

# Update scene title and script
if (@scene.dropcap != 0)
  page.replace_html 'title', content_tag('h3', fancy_title)
else
  page.replace_html 'title', ""
end
page.replace_html 'script', @scene.script
page << "goog.dom.getElement('story').scrollTop = 0;"
page.visual_effect  :highlight, 
                    'script', 
                    { :duration => 1,
                      :endcolor => '#f3f1bf'}

# Show/Hide navigation buttons as appropriate
if (@scene.has_back)
  page.show('nav_back')
else
  page.hide('nav_back')
end

if (@scene.has_next)
  page.show('nav_next')
else
  page.hide('nav_next')
end

# Transition soundtracks for the new scene
if (@last_scene.has_soundtrack && @scene.has_soundtrack && @last_scene.soundtrack == @scene.soundtrack)
  # Allow soundtrack to continue
else
  if (@last_scene.has_soundtrack)
    page << "kt.soundscape().fadeOut('#{@last_scene.soundtrack}', 3000);"
  end
  if (@scene.has_soundtrack)
    page << "kt.soundscape().fadeIn('#{@scene.soundtrack}', #{Sound.find_by_name(@scene.soundtrack).to_json(:except => id)});"
  end
end

# Transition ambient sound for the new scene
if (@last_scene.has_ambient_sound && @scene.has_ambient_sound && @last_scene.ambient_sound == @scene.ambient_sound)
  # Allow ambient sound to continue
else
  if (@last_scene.has_ambient_sound)
    page << "kt.soundscape().fadeOut('#{@last_scene.ambient_sound}', 3000);"
  end
  if (@scene.has_ambient_sound)
    page << "kt.soundscape().fadeIn('#{@scene.ambient_sound}', #{Sound.find_by_name(@scene.ambient_sound).to_json(:except => id)});"
  end
end
  
# Load KTX for the new scene if available
if (@scene.has_kml?)
  page.call 'kt.loadKmlForScene', @scene.path_to_kml, @scene.full_name
end
