// G O O G L E       E A R T H       P L U G I N 
%script{:type => "text/javascript", :src => "http://www.google.com/jsapi?key=#{REGISTRY[:api_key]}"}
%script{:src => "http://maps.google.com/maps?file=api&amp;v=2&amp;key=#{REGISTRY[:api_key]}"}
%script{:type => "text/javascript"}
  
  // Initializes Layer toggling objects
  var currentKmlObjects = {
  'blue-marble': null,
  'border': null,
  'atmosphere': null
  };  
  
  // Variables for geo details
  var currentlat = 0;
  var currentlon = 0;
  var currentalt = 0;
  
  // Google earth variables
  var ge;
  var globePlacemark = null;
  
  // G O O G L E     E A R T H     P L U G I N
  google.load("maps", "2.xx");
  google.load("earth", "1");

  function init() 
  {
  google.earth.createInstance('globe3d', initCB, failureCB);
  
  addCheckboxesUIHtml(
  '<input type="checkbox" id="kml-blue-marble-check" onclick="toggleKml(\'blue-marble\');"/><strong>Toggle Blue Marble Layer</strong><br>' +
  '<input type="checkbox" id="kml-border-check" onclick="toggleKml(\'border\');"/><strong>Toggle Borders Layer</strong><br>' +
  '<input type="checkbox" id="kml-atmosphere-check" onclick="toggleKml(\'atmosphere\');"/><strong>Toggle Atmosphere Layer</strong><br>'
  );   
  
  }
  
  function initCB(instance) 
  {
  ge = instance;
  ge.getWindow().setVisibility(true);
  // Navigation Control Auto
  ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);
  // Load the layers
  if (document.getElementById('kml-blue-marble-check').checked)
  loadKml('blue-marble');
  if (document.getElementById('kml-border-check').checked)
  loadKml('border');
  if (document.getElementById('kml-atmosphere-check').checked)
  loadKml('atmosphere');
  
  // Initial Look at:
  var la = ge.createLookAt(''); 
  
  var loadLat = document.getElementById("lat").value;
  var loadLon = document.getElementById("lon").value;
  var loadAlt = document.getElementById("alt").value;
  
  // If this is Edit seedling (text boxes are populated), look at the seedling placemark being Edited
  if (loadLat != "" &&  loadLon != "" && loadAlt != "") {
  loadLat = parseFloat(loadLat);
  loadLon = parseFloat(loadLon);
  loadAlt = parseFloat(loadAlt);
  
  globePlacemark = makePlacemark(loadLat, loadLon, loadAlt, ge.ALTITUDE_ABSOLUTE, 'G');
  ge.getFeatures().appendChild(globePlacemark);
  
  la.set(loadLat, loadLon, loadAlt, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, 9000000);}
  
  // Else if its New page (text boxes are empty), look at an aerial view of North America 
  else
  {la.set(33.717471, -117.831143, 0, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, 9000000);}
  
  ge.getOptions().setFlyToSpeed(0.6);
  ge.getView().setAbstractView(la);
  
  
  // Event Listener for click event on the GE globe       
  google.earth.addEventListener(ge.getGlobe(), 'click', function(evt) {
  
  if (evt.getButton() != 0)
  
  return;
                 
  // remove old placemarks if any
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark); 
                      
  // hit test and create new placemarks
  var hitTestResult = ge.getView().hitTest(evt.getClientX(), ge.UNITS_PIXELS, evt.getClientY(), ge.UNITS_PIXELS, ge.HIT_TEST_GLOBE);
  if (hitTestResult) {
  globePlacemark = makePlacemark(hitTestResult.getLatitude(), hitTestResult.getLongitude(),
  hitTestResult.getAltitude(), ge.ALTITUDE_ABSOLUTE, 'G');
            
  ge.getFeatures().appendChild(globePlacemark);

  currentlat = hitTestResult.getLatitude().toFixed(6);
  currentlon = hitTestResult.getLongitude().toFixed(6);
  currentalt = hitTestResult.getAltitude().toFixed(6);
  
  document.getElementById("lat").value = currentlat;
  document.getElementById("lon").value = currentlon;
  document.getElementById("alt").value = currentalt;

  plantit();

  }
  });

  }
  function failureCB(errorCode) {
  }
  
  
  // F L Y - T O          
  function FlytoClick() 
  {    
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark); 
  var geocodeLocation = document.getElementById('txtflyto').value;
  var geocoder = new google.maps.ClientGeocoder();
  geocoder.getLatLng(geocodeLocation, function(point) {
  if (point) {
  // Get the current range
  var lookAt = ge.getView().copyAsLookAt(ge.ALTITUDE_RELATIVE_TO_GROUND);
  // look at the entered destination
  var la = ge.createLookAt('');
  la.set(point.y, point.x, 10, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, lookAt.getRange());
  ge.getOptions().setFlyToSpeed(0.6);
  ge.getView().setAbstractView(la);
  }
  });
  }
  
  // S H I F T    T H E    S E E D L I N G    P L A C E M A R K    (if user changes Lat/Long and hits Reset button)
  function shiftplacemark()
  {  
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark); 
    
  var textLat = parseFloat(document.getElementById("lat").value);
  var textLon = parseFloat(document.getElementById("lon").value);
  var textAlt = parseFloat(document.getElementById("alt").value);
      
  globePlacemark = makePlacemark(textLat, textLon, textAlt, ge.ALTITUDE_ABSOLUTE, 'G');
  ge.getFeatures().appendChild(globePlacemark);
  
  // Get the current range
  var lookAt = ge.getView().copyAsLookAt(ge.ALTITUDE_RELATIVE_TO_GROUND);
  // Look at the point where seedling was placed
  var la = ge.createLookAt('');
  la.set(textLat, textLon, textAlt, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, lookAt.getRange());  
  ge.getOptions().setFlyToSpeed(0.6);
  ge.getView().setAbstractView(la);
  }
  
  // C R E A T E    T H E    S E E D L I N G    P L A C E M A R K 
  function makePlacemark(placelat, placelng, placealt, altMode, iconStr)   
  {
  var icon  = ge.createIcon('');
  icon.setHref('http://karunatree.com/images/seedlings/seedicon.png');
  var style = ge.createStyle('');
  style.getIconStyle().setIcon(icon);
  style.getIconStyle().getHotSpot().set(0.5, ge.UNITS_FRACTION, 0, ge.UNITS_FRACTION);
            
  var pt = ge.createPoint('');
  pt.set(placelat, placelng, placealt, altMode, false, false);
        
  var pm = ge.createPlacemark('');
  pm.setGeometry(pt);
  pm.setStyleSelector(style);
    
  return pm;
  }
  
  google.setOnLoadCallback(init);

  
  //   F U N C T I O N S       F O R       G L O B E - L A Y E R S      T O G G L E 
  function getoggle(checkboxid,linkid) 
  {
  document.getElementById(checkboxid).checked = !(document.getElementById(checkboxid).checked);
  
  var element = document.getElementById(linkid)
  
  if (element.className == 'checked')
  {element.className = 'off';}
  else if (element.className == 'off')
  {element.className = 'checked';}
  
  if (checkboxid == 'kml-blue-marble-check')
  toggleKml('blue-marble');
  if (checkboxid == 'kml-border-check')
  toggleKml('border');
  if (checkboxid == 'kml-atmosphere-check')
  toggleKml('atmosphere');
  }  

  function toggletext(text)
  {
  document.getElementById("toggletext").innerHTML = text; 
  }   
  
  
  //   P L A N T I N G - S E E D L I N G S
  function plantit(){
  shiftplacemark();
  setOpacity('0', 'placeholdergeo')
  MapImg();
  fadeIn('placeholdergeo');
  }
    
  //   F U N C T I O N S       F O R       F A D E - I N       E F F E C T
  
  function setOpacity(level, el) {
  var element = document.getElementById(el);
  element.style.opacity = level;
  element.style.MozOpacity = level;
  element.style.KhtmlOpacity = level;
  element.style.filter = "alpha(opacity=" + (level * 100) + ");";
  }
  // fade in the seedling summary
  
  function fadeIn(elementid) {
  var duration = 1000;  /* 1000 millisecond fade = 1 sec */
  var steps = 30;       /* number of opacity intervals   */
  for (i = 0; i <= 1; i += (1 / steps)) {
  setTimeout("setOpacity(" + i + ",\"" + elementid + "\")", i * duration); }
  }
  
  function fadeOut(elementid) {
  var duration = 1000;  /* 1000 millisecond fade = 1 sec */
  var steps = 30;       /* number of opacity intervals   */
  for (i = 1; i >= 0; i -= (1 / steps)) {
  setTimeout("setOpacity(" + i + ",\"" + elementid + "\")", i * duration); }
  }

  
  //   S T A T I C     G O O G L E     M A P   
  function MapImg() {
  var map;
  var lat = parseFloat(document.getElementById("lat").value);
  var lon = parseFloat(document.getElementById("lon").value);
  var alt = parseFloat(document.getElementById("alt").value);
  var mapurl = "http://maps.google.com/maps/api/staticmap?" +
  "center=" + lat + "," + lon +
  "&zoom=3&size=340x160&maptype=hybrid" +
  "&markers=icon:http://karunatree.com/images/seedlings/seedicon.png|" + lat + "," + lon +
  "&sensor=false";

  document.getElementById("map_canvas").src= mapurl;
  reverse(lat, lon, alt); 
  }  

  //   R E V E R S E     G E O C O D E      T H E      A D D R E S S 
  function reverse(lat, lon, alt) {
  var geocoder;
  var address;
  map = new GMap2(document.getElementById("map_canvas"));
  var location=new GLatLng(lat,lon);
  geocoder = new GClientGeocoder();
  geocoder.getLocations(location, showAddress);
  document.getElementById("latkeeper").innerHTML = document.getElementById("lat").value;
  document.getElementById("lonkeeper").innerHTML = document.getElementById("lon").value;
  document.getElementById("altkeeper").innerHTML = document.getElementById("alt").value;
  }
  
  function showAddress(response) {
  map.clearOverlays();
  if (!response || response.Status.code != 200) {
  document.getElementById("lbladdress").innerHTML = "No known address";
  } else {
  place = response.Placemark[0];
  point = new GLatLng(place.Point.coordinates[1],place.Point.coordinates[0]);
  document.getElementById("lbladdress").innerHTML = place.address;
  }
  }
  