//   Karunatree
//   Copyright 2009-2010 Derek Lyons & Karunatree. All Rights Reserved.
//   
//   Author: Raminder Goraya & Jason Lu

- content_for(:include_custom_stylesheet) do
  = stylesheet_link_tag "seedlings"
- form_for @seedling, :html => { :multipart  => true } do |form|

  %fieldset
    %legend Please enter seedling details...
    = error_messages_for "seedling"
    %table{:id => "tabseed"} 
      %tr
        %td{:id => "globecolumn"}
          %div{:id => "map3d"}
        %td{:id => "formcolumn"}  
          .form-row
            = form.hidden_field :user_ids, :value => [current_user.id]
          .form-row
            %label{:for => "title"} Title &nbsp;
            = form.text_field :title, :size => Seedling::TITLE_SIZE, :maxlength => Seedling::TITLE_MAX_LENGTH
          .form-row
            %label{:for => "description"} Description &nbsp;
            = form.text_area :description, :size => Seedling::DESCRIPTION_SIZE, :maxlength => Seedling::DESCRIPTION_MAX_LENGTH
          .form-row
            %label{:for => "latitude" } Latitude(Lat) &nbsp;
            = form.text_field :lat, :size => Seedling::LAT_SIZE, :maxlength => Seedling::LAT_SIZE, :id => "frmlat"  
          .form-row
            %label{:for => "lon"} Longitude(Lon) &nbsp;
            = form.text_field :lon, :size => Seedling::LON_SIZE, :maxlength => Seedling::LON_SIZE, :id => "frmlon"  
          .form-row
            %table
              %tr
                %td
                  %label{:for => "alt"} Altitude(Alt) &nbsp;
                  = form.text_field :alt, :size => Seedling::ALT_SIZE, :maxlength => Seedling::ALT_SIZE, :id => "frmalt"   
                %td{:align => "right"}
                  %a{:id=>"reset", :Title => "Set the Seedling position", :href => "javascript:shiftplacemark()"}
          .form-row
            %label{ :for => "project" } Project &nbsp;
            = form.file_field :project    
          .form-row
            %label{ :for => "audio_message" } Audio Message &nbsp;
            = form.file_field :audio_message
            
          .form-row
            %label{ :for => "tag_names" } Tag &nbsp;
            = form.text_field :tag_names
                      
          .form-row
            = form.submit "Submit", :class => "submit"
      
      %tr 
        %td{:colspan =>"2"}
          %table{:id => "globecontrols"} 
            %tr
              %td{:align => "left"}
                %input{:id => "txtflyto", :Size => "35", :type => "text", :value => "San Francisco, CA"}/              
              %td{:align => "left"}  
                %a{:id => "flyto", :Title => "Fly to the Entered Destination", :href => "javascript:FlytoClick()"}
              %td{:align => "right", :style =>"width:90%" }                
                Click anywhere on the globe to create a seedling <br>or enter the latitudes and longitudes manually. 
    
               

//Google Earth Dispaly 
%script{:type => "text/javascript", :src => "http://www.google.com/jsapi?key=#{REGISTRY[:api_key]}"} 
//%script{:src => "http://earth-api-utility-library.googlecode.com/svn/trunk/extensions/dist/extensions.pack.js"}

%script{:type => "text/javascript"}
  var ge;
  var globePlacemark = null;
  
  google.load("maps", "2.xx");
  google.load("earth", "1");

  function init() 
  {
  google.earth.createInstance('map3d', initCB, failureCB);
  }
  
  function initCB(instance) 
  {
  ge = instance;
  ge.getWindow().setVisibility(true);
    
  // add a navigation control
  ge.getNavigationControl().setVisibility(ge.VISIBILITY_AUTO);
  
  // add some layers
  ge.getLayerRoot().enableLayerById(ge.LAYER_BORDERS, true);
  ge.getLayerRoot().enableLayerById(ge.LAYER_ROADS, true);
  ge.getLayerRoot().enableLayerById(ge.LAYER_TERRAIN, true);
  ge.getLayerRoot().enableLayerById(ge.LAYER_BUILDINGS, true);
  
  // moving the camera to the Starting Point(default or seedling) and make initial seedling placemark (if Edit page)
  var la = ge.createLookAt(''); 
  
  var loadLat = document.getElementById("frmlat").value;
  var loadLon = document.getElementById("frmlon").value;
  var loadAlt = document.getElementById("frmalt").value;
  
  // If this is Edit seedling (text boxes are populated), look at the seedling placemark being Edited
  if (loadLat != "" &&  loadLon != "" && loadAlt != "")
  {
  loadLat = parseFloat(loadLat);
  loadLon = parseFloat(loadLon);
  loadAlt = parseFloat(loadAlt);
  
  globePlacemark = makePlacemark(loadLat, loadLon, loadAlt, ge.ALTITUDE_ABSOLUTE, 'G');
  ge.getFeatures().appendChild(globePlacemark);
  
  la.set(loadLat, loadLon, loadAlt, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, 200000);
  }
  
  // Else if its New page (text boxes are empty), look at an aerial view of North America 
  else
  {
  la.set(33.717471, -117.831143, 0, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, 9800000);
  }
  
  ge.getOptions().setFlyToSpeed(0.15);
  ge.getView().setAbstractView(la);
         
  
    
  google.earth.addEventListener(ge.getGlobe(), 'click', function(evt) {
  if (evt.getButton() != 0)
  return;
                 
  // remove old placemarks if any
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark); 
                        
  // hit test and create new placemarks
  var hitTestResult = ge.getView().hitTest(evt.getClientX(), ge.UNITS_PIXELS, evt.getClientY(), ge.UNITS_PIXELS, ge.HIT_TEST_GLOBE);
  if (hitTestResult) {
  globePlacemark = makePlacemark(hitTestResult.getLatitude(), hitTestResult.getLongitude(),
  hitTestResult.getAltitude(), ge.ALTITUDE_ABSOLUTE, 'G');
            
  ge.getFeatures().appendChild(globePlacemark);
  document.getElementById("frmlat").value = hitTestResult.getLatitude().toFixed(6);
  document.getElementById("frmlon").value = hitTestResult.getLongitude().toFixed(6);
  document.getElementById("frmalt").value = hitTestResult.getAltitude().toFixed(6);
  }
  });
    

  }
  function failureCB(errorCode) {
  }
  
  // the Home Button, takes the user back to the starting Look at of the Globe
  function btnHomeClick() 
  {
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark);
  var lookAt = ge.createLookAt('');
  lookAt.set(33.717471, -117.831143, 0, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, 9800000);
  ge.getOptions().setFlyToSpeed(0.15);
  ge.getView().setAbstractView(lookAt);
  }
  
  
  // the Fly-To Button        
  function FlytoClick() 
  {    
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark); 
  var geocodeLocation = document.getElementById('txtflyto').value;
  var geocoder = new google.maps.ClientGeocoder();
  geocoder.getLatLng(geocodeLocation, function(point) {
  if (point) {
  var lookAt = ge.createLookAt('');
  lookAt.set(point.y, point.x, 10, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, 20000);
  ge.getOptions().setFlyToSpeed(0.15);
  ge.getView().setAbstractView(lookAt);
  }
  });
  }
  
  // shift the placemark if user changes Lat/Long and hits Reset button
  function shiftplacemark()
  {  
  if (globePlacemark)
  ge.getFeatures().removeChild(globePlacemark); 
    
  var textLat = parseFloat(document.getElementById("frmlat").value);
  var textLon = parseFloat(document.getElementById("frmlon").value);
  var textAlt = parseFloat(document.getElementById("frmalt").value);
      
  globePlacemark = makePlacemark(textLat, textLon, textAlt, ge.ALTITUDE_ABSOLUTE, 'G');
  ge.getFeatures().appendChild(globePlacemark);
  
  // Get the current range
  var lookAt = ge.getView().copyAsLookAt(ge.ALTITUDE_RELATIVE_TO_GROUND);
  // Look at the point where seedling was placed
  var la = ge.createLookAt('');
  la.set(textLat, textLon, textAlt, ge.ALTITUDE_RELATIVE_TO_GROUND, 0, 0, lookAt.getRange());  
  ge.getOptions().setFlyToSpeed(0.5);
  ge.getView().setAbstractView(la);
  }
  
  // Create the Seedling Style placemark 
  function makePlacemark(placelat, placelng, placealt, altMode, iconStr)   
  {
  var icon  = ge.createIcon('');
  icon.setHref('http://karunatree.com/images/seedlings/seedicon.png');
  var style = ge.createStyle('');
  style.getIconStyle().setIcon(icon);
  style.getIconStyle().getHotSpot().set(0.5, ge.UNITS_FRACTION, 0, ge.UNITS_FRACTION);
            
  var pt = ge.createPoint('');
  pt.set(placelat, placelng, placealt, altMode, false, false);
        
  var pm = ge.createPlacemark('');
  pm.setGeometry(pt);
  pm.setStyleSelector(style);
    
  return pm;
  }
  
  google.setOnLoadCallback(init);

  google.earth.save();